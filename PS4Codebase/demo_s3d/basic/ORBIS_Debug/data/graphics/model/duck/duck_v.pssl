/*
 * SIE CONFIDENTIAL
 * PlayStation(R)4 Programmer Tool Runtime Library Release 07.008.001
 * Copyright (C) 2016 Sony Interactive Entertainment Inc.
 */
struct appdata {
	float3 Position	: POSITION;
	float4 UV	: TEXCOORD0;
	float4 Normal	: NORMAL0;
};

struct vertexOutput {
	float4 HPosition	: S_POSITION;
	float2 UV		: TEXCOORD0;
	float3 LightVec	: TEXCOORD1;
	float3 WorldNormal	: TEXCOORD2;
	float3 WorldEyeVec	: TEXCOORD3;
};

vertexOutput main(in appdata IN,
	uniform row_major matrix WorldInverseTranspose, 
	uniform row_major matrix mvpMatrix,     
	uniform row_major matrix WorldXf,   
	uniform row_major matrix ViewInverse,   
	uniform float3 light0Position
	) 
{
	vertexOutput OUT = (vertexOutput)0;
	OUT.WorldNormal = mul(WorldInverseTranspose, IN.Normal).xyz;
	float4 Po = float4(IN.Position.xyz,1);
	float3 Pw = mul(WorldXf, Po).xyz;
	OUT.LightVec = (light0Position - Pw);
	OUT.WorldEyeVec = (float3(ViewInverse[0].w, ViewInverse[1].w, ViewInverse[2].w) - Pw);
	OUT.HPosition = mul(mvpMatrix, Po);
#ifdef MAYA
	OUT.UV = IN.UV.xy;
#else
	OUT.UV.x = IN.UV.x;
	OUT.UV.y = 1.0f - IN.UV.y;
#endif
	return OUT;
}

