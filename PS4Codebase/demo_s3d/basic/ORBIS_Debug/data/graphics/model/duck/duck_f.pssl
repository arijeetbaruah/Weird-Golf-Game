/*
 * SIE CONFIDENTIAL
 * PlayStation(R)4 Programmer Tool Runtime Library Release 07.008.001
 * Copyright (C) 2016 Sony Interactive Entertainment Inc.
 */
struct vertexOutput {
	float4 HPosition	: S_POSITION;
	float2 UV		: TEXCOORD0;
	float3 LightVec	: TEXCOORD1;
	float3 WorldNormal	: TEXCOORD2;
	float3 WorldEyeVec	: TEXCOORD3;
};

SamplerState texState : register(s0);
Texture2D ColorTex : register( t0 );

float4 main(vertexOutput IN,
	    uniform float3 AmbiColor,
	    uniform float SpecExpon,
	    uniform float Ks
	    ) : S_TARGET_OUTPUT {
	float3 Ln = normalize(IN.LightVec);
	float3 Vn = normalize(IN.WorldEyeVec);
	float3 Nn = normalize(IN.WorldNormal);
	float3 Hn = normalize(Vn + Ln);
	float4 lv = lit(dot(Ln,Nn),dot(Hn,Nn),SpecExpon);
	float4	color = ColorTex.Sample(texState, IN.UV);
	float3 DiffResult = color.xyz * (lv.yyy + AmbiColor);
	float3 SpecResult = Ks * lv.zzz;
        float4 ret = float4((DiffResult + SpecResult).xyz,1.0);
	//	ret.rgb = DiffResult;
	return ret;
}

