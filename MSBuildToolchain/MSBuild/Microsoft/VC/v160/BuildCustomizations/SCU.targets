<?xml version = "1.0" encoding = "utf-8"?>
<Project xmlns = "http://schemas.microsoft.com/developer/msbuild/2003">

  <UsingTask TaskName = "OrbisScu" AssemblyFile="$(VCTargetsPath)Platforms\ORBIS\SCE.Build.PsslTasks.orbis.dll" />
  <UsingTask TaskName = "Bin2Header" AssemblyFile="$(VCTargetsPath)Platforms\ORBIS\SCE.Build.PsslTasks.orbis.dll" />

  <PropertyGroup Condition="'$(SceLangID)' == ''">
    <SceLangID Condition="'$(LangID)' == '1041'">1041</SceLangID>
    <SceLangID Condition="'$(LangID)' != '1041'">1033</SceLangID>
  </PropertyGroup>

  <ItemGroup>
    <PropertyPageSchema Include = "$(MSBuildThisFileDirectory)\$(SceLangID)\$(MSBuildThisFileName).xml" />
    <AvailableItemName Include = "SCU">
      <Targets>SCUCompile</Targets>
    </AvailableItemName>
  </ItemGroup>

  <Target Name="SelectOrbisScuCompile" DependsOnTargets="_SelectedFiles;$(ComputeCompileInputsTargets);SelectCustomBuild">
    <ItemGroup Condition="'@(SelectedFiles)' != ''">
      <SCU Remove="@(SCU)" Condition="'%(Identity)' != '@(SelectedFiles)'"/>
      <SCU>
        <MinimalRebuildFromTracking>false</MinimalRebuildFromTracking>
      </SCU>
    </ItemGroup>
  </Target>

  <Target
    Name             = "SCUCompile"
    AfterTargets     = "CustomBuild"
    Condition        = "'@(SCU)' != ''"
    DependsOnTargets = "SelectOrbisScuCompile">

    <MakeDir Directories = "$([System.IO.Path]::GetDirectoryName('%(SCU.OutputFileName)'))" />

    <PropertyGroup>
      <SCUYieldDuringToolExecution Condition="'$(LinkYieldDuringToolExecution)' == ''">false</SCUYieldDuringToolExecution>
      <SCUToolArchitecture Condition="'$(LinkToolArchitecture)' == ''">Native64Bit</SCUToolArchitecture>
    </PropertyGroup>

    <!-- Distributed build is disabled for SCU while SN-DBS does not support Tracking. -->
    <!-- DistributedBuild                   ="$(DistributedBuild)" -->
    <OrbisScu
        Condition                          ="'%(SCU.ExcludedFromBuild)' != 'true'"
        Sources                            ="@(SCU)"

        AdditionalIncludeDirectories       ="%(SCU.AdditionalIncludeDirectories)"
        EvalClause                         ="%(SCU.EvalClause)"
        PreprocessorDefinitions            ="%(SCU.PreprocessorDefinitions)"
        WarningLevel                       ="%(SCU.WarningLevel)"
        WarningsAsErrors                   ="%(SCU.WarningsAsErrors)"
        DisableSpecificWarnings            ="%(SCU.DisableSpecificWarnings)"
        Recolor                            ="%(SCU.Recolor)"
        OptimizeColoring                   ="%(SCU.OptimizeColoring)"
        Distributable                      ="%(SCU.Distributable)"
        Verbosity                          ="%(SCU.Verbosity)"
        AdditionalOptions                  ="%(SCU.AdditionalOptions)"

        BuildingInIDE                      ="$(BuildingInsideVisualStudio)"
        DistributedBuild                   ="false"
        DistributedBuildId                 ="$(DistributedBuildId)"
        ProjectName                        ="$(ProjectName)"
        TrackerLogDirectory                ="$(TLogLocation)"
        TLogReadFiles                      ="@(ScuTLogReadFiles)"
        TLogWriteFiles                     ="@(ScuTLogWriteFiles)"
        ToolExe                            ="$(ScuToolExe)"
        ToolPath                           ="$(ScuToolPath)"
        TrackFileAccess                    ="$(TrackFileAccess)"
        MinimalRebuildFromTracking         ="%(SCU.MinimalRebuildFromTracking)"
        ToolArchitecture                   ="$(SCUToolArchitecture)"
        TrackerFrameworkPath               ="$(LibTrackerFrameworkPath)"
        TrackerSdkPath                     ="$(SCUTrackerSdkPath)"
        TrackedInputFilesToIgnore          ="@(SCUNoDependencies)"

        AcceptableNonZeroExitCodes         ="%(SCU.AcceptableNonZeroExitCodes)"
        YieldDuringToolExecution           ="$(SCUYieldDuringToolExecution)"
    /><!-- TODO: No TLog files, need to use a task with Tracker -->

    <ItemGroup Condition="'@(SCU)' != ''">
      <Bin2Header Include="%(SCU.OutputFileName)" Condition = "'%(SCU.GenerateHeader)' == 'true' and '%(SCU.ExcludedFromBuild)' != 'true'">
        <HeaderFileName>%(SCU.HeaderFileName)</HeaderFileName>
        <AdditionalOptions>%(SCU.Bin2HOptions)</AdditionalOptions>
      </Bin2Header>
    </ItemGroup>

    <PropertyGroup>
      <Bin2Header_MinimalRebuildFromTracking Condition="'@(Bin2Header->AnyHaveMetadataValue('MinimalRebuildFromTracking', 'false'))' == 'true'">false</Bin2Header_MinimalRebuildFromTracking>
      <Bin2Header_MinimalRebuildFromTracking Condition="'$(BuildType)' != 'Build' or '$(ForceRebuild)' == 'true'" >false</Bin2Header_MinimalRebuildFromTracking>
      <Bin2Header_MinimalRebuildFromTracking Condition="'$(Link_MinimalRebuildFromTracking)' == ''">true</Bin2Header_MinimalRebuildFromTracking>
      <Bin2HeaderYieldDuringToolExecution Condition="'$(Bin2HeaderYieldDuringToolExecution)' == ''">false</Bin2HeaderYieldDuringToolExecution>
      <Bin2HeaderToolArchitecture Condition="'$(Bin2HeaderToolArchitecture)' == ''">Native64Bit</Bin2HeaderToolArchitecture>
    </PropertyGroup>

    <MakeDir Directories="$([System.IO.Path]::GetDirectoryName('%(Bin2Header.HeaderFileName)'))" Condition="'@(Bin2Header)' != ''"/>

    <Bin2Header
        Condition                          ="'@(Bin2Header)' != ''"
        Binaries                           ="@(Bin2Header)"
        HeaderFileName                     ="%(Bin2Header.HeaderFileName)"
        AdditionalOptions                  ="%(Bin2Header.AdditionalOptions)"

        TrackerLogDirectory                ="$(TLogLocation)"
        TLogReadFiles                      ="@(Bin2HeaderTLogReadFiles)"
        TLogWriteFiles                     ="@(Bin2HeaderTLogWriteFiles)"
        ToolExe                            ="$(Bin2HeaderToolExe)"
        ToolPath                           ="$(Bin2HeaderToolPath)"
        TrackFileAccess                    ="$(TrackFileAccess)"
        MinimalRebuildFromTracking         ="$(Bin2Header_MinimalRebuildFromTracking)"
        ToolArchitecture                   ="$(Bin2HeaderToolArchitecture)"
        TrackerFrameworkPath               ="$(LibTrackerFrameworkPath)"
        TrackerSdkPath                     ="$(Bin2HeaderTrackerSdkPath)"
        TrackedInputFilesToIgnore          ="@(Bin2HeaderNoDependencies)"

        AcceptableNonZeroExitCodes         ="%(Bin2Header.AcceptableNonZeroExitCodes)"
        YieldDuringToolExecution           ="$(Bin2HeaderYieldDuringToolExecution)"
    >
    </Bin2Header>

  </Target>

  <Target Name="ComputeScuLinkInputTargets">
    <ItemGroup>
      <Link Include = "%(SCU.OutputFileName)" Condition = "'%(SCU.Embed)' == 'true' AND '%(SCU.ExcludedFromBuild)' != 'true'" />
    </ItemGroup>
  </Target>

  <Target Name="ComputeScuLibInputTargets">
    <ItemGroup>
      <Lib Include = "%(SCU.OutputFileName)" Condition = "'%(SCU.Embed)' == 'true' AND '%(SCU.ExcludedFromBuild)' != 'true'" />
    </ItemGroup>
  </Target>

  <PropertyGroup>
    <ComputeLinkInputsTargets>
      ComputeScuLinkInputTargets;
      $(ComputeLinkInputsTargets)
    </ComputeLinkInputsTargets>
  </PropertyGroup>

  <PropertyGroup>
    <ComputeLibInputsTargets>
      ComputeScuLibInputTargets;
      $(ComputeLibInputsTargets)
    </ComputeLibInputsTargets>
  </PropertyGroup>
</Project>
