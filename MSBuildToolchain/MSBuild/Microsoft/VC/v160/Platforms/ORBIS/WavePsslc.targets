<?xml version = "1.0" encoding = "utf-8"?>
<Project xmlns = "http://schemas.microsoft.com/developer/msbuild/2003">

  <UsingTask TaskName = "WavePsslc" AssemblyFile="$(VCTargetsPath)Platforms\$(Platform)\SCE.Build.PsslTasks.$(Platform).dll" />
  <UsingTask TaskName = "Bin2Header" AssemblyFile="$(VCTargetsPath)Platforms\$(Platform)\SCE.Build.PsslTasks.$(Platform).dll" />

  <PropertyGroup Condition="'$(SceLangID)' == ''">
    <SceLangID Condition="'$(LangID)' == '1041'">1041</SceLangID>
    <SceLangID Condition="'$(LangID)' != '1041'">1033</SceLangID>
  </PropertyGroup>

  <ItemGroup Condition="'$(UseORBISDefaultPropertyPageSchemas)' != 'false' and '$(ConfigurationType)' != 'Utility'">
    <PsslPages Include="$(VCTargetsPath)\Platforms\ORBIS\$(SceLangID)\wavepsslc.xml"/>
    <PsslPages Include="$(VCTargetsPath)\Platforms\ORBIS\$(SceLangID)\WavePsslcSchema.xml" />
  </ItemGroup>

  <ItemGroup>
    <PropertyPageSchema Include="@(PsslPages)" />
    <AvailableItemName Include="WavePsslc">
      <Targets>WavePsslc</Targets>
    </AvailableItemName>
  </ItemGroup>

  <Target Name="SelectWavePsslCompile" DependsOnTargets="_SelectedFiles;$(ComputeCompileInputsTargets);SelectCustomBuild">
    <ItemGroup Condition="'@(SelectedFiles)' != ''">
      <WavePsslc Remove="@(WavePsslc)" Condition="'%(Identity)' != '@(SelectedFiles)'"/>
      <WavePsslc>
        <MinimalRebuildFromTracking>false</MinimalRebuildFromTracking>
      </WavePsslc>
    </ItemGroup>
  </Target>

  <Target Name = "CheckWavePsslFileSuffix"
          Condition = "'@(WavePsslc)' != ''">
    <ItemGroup>
      <WrongSuffix Include   = "%(WavePsslc.Identity)"
                   Condition = "'%(WavePsslc.ExcludedFromBuild)' != 'true' AND '%(WavePsslc.Profile)' == '' AND
                                !('$([System.IO.Path]::GetFileNameWithoutExtension(%(WavePsslc.Identity)).EndsWith(&quot;_vv&quot;))') AND
                                !('$([System.IO.Path]::GetFileNameWithoutExtension(%(WavePsslc.Identity)).EndsWith(&quot;_vl&quot;))') AND
                                !('$([System.IO.Path]::GetFileNameWithoutExtension(%(WavePsslc.Identity)).EndsWith(&quot;_ve&quot;))') AND
                                !('$([System.IO.Path]::GetFileNameWithoutExtension(%(WavePsslc.Identity)).EndsWith(&quot;_p&quot;))') AND
                                !('$([System.IO.Path]::GetFileNameWithoutExtension(%(WavePsslc.Identity)).EndsWith(&quot;_c&quot;))') AND
                                !('$([System.IO.Path]::GetFileNameWithoutExtension(%(WavePsslc.Identity)).EndsWith(&quot;_g&quot;))') AND
                                !('$([System.IO.Path]::GetFileNameWithoutExtension(%(WavePsslc.Identity)).EndsWith(&quot;_h&quot;))') AND
                                !('$([System.IO.Path]::GetFileNameWithoutExtension(%(WavePsslc.Identity)).EndsWith(&quot;_hoc&quot;))') AND
                                !('$([System.IO.Path]::GetFileNameWithoutExtension(%(WavePsslc.Identity)).EndsWith(&quot;_dv&quot;))') AND
                                !('$([System.IO.Path]::GetFileNameWithoutExtension(%(WavePsslc.Identity)).EndsWith(&quot;_de&quot;))') AND
                                !('$([System.IO.Path]::GetFileNameWithoutExtension(%(WavePsslc.Identity)).EndsWith(&quot;_dvoc&quot;))') AND
                                !('$([System.IO.Path]::GetFileNameWithoutExtension(%(WavePsslc.Identity)).EndsWith(&quot;_veoc&quot;))') AND
                                !('$([System.IO.Path]::GetFileNameWithoutExtension(%(WavePsslc.Identity)).EndsWith(&quot;_ddtc&quot;))') AND
                                !('$([System.IO.Path]::GetFileNameWithoutExtension(%(WavePsslc.Identity)).EndsWith(&quot;_ddtci&quot;))') AND
                                !('$([System.IO.Path]::GetFileNameWithoutExtension(%(WavePsslc.Identity)).EndsWith(&quot;_goc&quot;))')" />
    </ItemGroup>

    <Warning Text = "Unsupported file suffix on item: %(WrongSuffix.Identity)" Condition = "'@(WrongSuffix)' != ''" />
  </Target>

  <Target Name = "FixupWavePsslcOptions" 
          Condition="'@(WavePsslc)' != ''">

    <ItemGroup>
      <WavePsslc Condition="'%(WavePsslc.Profile)' == 'sce_vs_vs_orbis'">
        <Profile>VSVS</Profile>
      </WavePsslc>
      <WavePsslc Condition="'%(WavePsslc.Profile)' == 'sce_vs_ls_orbis'">
        <Profile>VSLS</Profile>
      </WavePsslc>
      <WavePsslc Condition="'%(WavePsslc.Profile)' == 'sce_dd_tricull_orbis'">
        <Profile>DDTC</Profile>
      </WavePsslc>
      <WavePsslc Condition="'%(WavePsslc.Profile)' == 'sce_dd_tricull_instancing_orbis'">
        <Profile>DDTCI</Profile>
      </WavePsslc>
      <WavePsslc Condition="'%(WavePsslc.Profile)' == 'sce_vs_es_orbis'">
        <Profile>VSES</Profile>
      </WavePsslc>
      <WavePsslc Condition="'%(WavePsslc.Profile)' == 'sce_vs_es_on_chip_orbis'">
        <Profile>VSESOC</Profile>
      </WavePsslc>
      <WavePsslc Condition="'%(WavePsslc.Profile)' == 'sce_ps_orbis'">
        <Profile>PS</Profile>
      </WavePsslc>
      <WavePsslc Condition="'%(WavePsslc.Profile)' == 'sce_cs_orbis'">
        <Profile>CS</Profile>
      </WavePsslc>
      <WavePsslc Condition="'%(WavePsslc.Profile)' == 'sce_gs_orbis'">
        <Profile>GS</Profile>
      </WavePsslc>
      <WavePsslc Condition="'%(WavePsslc.Profile)' == 'sce_gs_on_chip_orbis'">
        <Profile>GSOC</Profile>
      </WavePsslc>
      <WavePsslc Condition="'%(WavePsslc.Profile)' == 'sce_hs_orbis'">
        <Profile>HS</Profile>
      </WavePsslc>
      <WavePsslc Condition="'%(WavePsslc.Profile)' == 'sce_hs_off_chip_orbis'">
        <Profile>HSOC</Profile>
      </WavePsslc>
      <WavePsslc Condition="'%(WavePsslc.Profile)' == 'sce_ds_vs_orbis'">
        <Profile>DSVS</Profile>
      </WavePsslc>
      <WavePsslc Condition="'%(WavePsslc.Profile)' == 'sce_ds_vs_off_chip_orbis'">
        <Profile>DSVSOC</Profile>
      </WavePsslc>
      <WavePsslc Condition="'%(WavePsslc.Profile)' == 'sce_ds_es_orbis'">
        <Profile>DSES</Profile>
      </WavePsslc>
      <WavePsslc Condition="'%(WavePsslc.Profile)' == 'sce_ds_es_off_chip_orbis'">
        <Profile>DSESOC</Profile>
      </WavePsslc>
      <WavePsslc Condition="'%(WavePsslc.Profile)' == 'sce_ds_es_off_chip_orbis'">
        <Profile>DSESOC</Profile>
      </WavePsslc>
    </ItemGroup>
  </Target>

  <Target
    Name             = "WavePsslc"
    AfterTargets     = "CustomBuild"
    Condition        = "'@(WavePsslc)' != ''"
    DependsOnTargets = "SelectWavePsslCompile;FixupWavePsslcOptions;CheckWavePsslFileSuffix">

    <MakeDir Directories = "$([System.IO.Path]::GetDirectoryName('%(WavePsslc.OutputFileName)'))" />

    <WavePsslc Condition ="'%(WavePsslc.ExcludedFromBuild)' != 'true'"
        Sources                            ="@(WavePsslc)"

        AdditionalIncludeDirectories       ="%(WavePsslc.AdditionalIncludeDirectories)"
        ForcedIncludeFiles                 ="%(WavePsslc.ForcedIncludeFiles)"
        Optimization                       ="%(WavePsslc.Optimization)"
        FastMath                           ="%(WavePsslc.FastMath)"
        HwTarget                           ="%(WavePsslc.HwTarget)"
        EntryPoint                         ="%(WavePsslc.EntryPoint)"
        Profile                            ="%(WavePsslc.Profile)"
        PreprocessorDefinitions            ="%(WavePsslc.PreprocessorDefinitions)"
        Nostdlib                           ="%(WavePsslc.Nostdlib)"
        Language                           ="%(WavePsslc.Language)"
        WarningsAsErrors                   ="%(WavePsslc.WarningsAsErrors)"
        PsslLanguageStd                    ="%(WavePsslc.PsslLanguageStd)"
        WarnPerformance                    ="%(WavePsslc.WarnPerformance)"
        SdbCache                           ="%(WavePsslc.SdbCache)"
        SdbCacheDir                        ="%(WavePsslc.SdbCacheDir)"
        AdditionalOptions                  ="%(WavePsslc.AdditionalOptions)"

        TrackerLogDirectory                ="$(TLogLocation)"
        TLogReadFiles                      ="@(PsslTLogReadFiles)"
        TLogWriteFiles                     ="@(PsslTLogWriteFiles)"
        ToolExe                            ="$(PsslToolExe)"
        ToolPath                           ="$(PsslToolPath)"
        TrackFileAccess                    ="$(TrackFileAccess)"
        MinimalRebuildFromTracking         ="%(WavePsslc.MinimalRebuildFromTracking)"
        ToolArchitecture                   ="$(PsslToolArchitecture)"

        MultiProcessorCompilation          ="%(WavePsslc.MultiProcessorCompilation)"
        ProcessorNumber                    ="%(WavePsslc.ProcessorNumber)"
        BuildingInIDE                      ="$(BuildingInsideVisualStudio)"
        Distributable                      ="%(WavePsslc.Distributable)"
        DistributedBuild                   ="$(DistributedBuild)"
        DistributedBuildId                 ="$(DistributedBuildId)"
        SnDbsOptions                       ="$(SnDbsOptions)"
        ProjectName                        ="$(ProjectName)"

        AcceptableNonZeroExitCodes         ="%(WavePsslc.AcceptableNonZeroExitCodes)"
        YieldDuringToolExecution           ="$(WavePsslcYieldDuringToolExecution)"
    />

    <ItemGroup Condition="'@(WavePsslc)' != ''">
      <Bin2Header Include="%(WavePsslc.OutputFileName)" Condition = "'%(WavePsslc.GenerateHeader)' == 'true' and '%(WavePsslc.ExcludedFromBuild)' != 'true'">
        <HeaderFileName>%(WavePsslc.HeaderFileName)</HeaderFileName>
        <AdditionalOptions>%(WavePsslc.Bin2HOptions)</AdditionalOptions>
      </Bin2Header>
    </ItemGroup>

    <PropertyGroup>
      <Bin2Header_MinimalRebuildFromTracking Condition="'@(Bin2Header->AnyHaveMetadataValue('MinimalRebuildFromTracking', 'false'))' == 'true'">false</Bin2Header_MinimalRebuildFromTracking>
      <Bin2Header_MinimalRebuildFromTracking Condition="'$(BuildType)' != 'Build' or '$(ForceRebuild)' == 'true'" >false</Bin2Header_MinimalRebuildFromTracking>
      <Bin2Header_MinimalRebuildFromTracking Condition="'$(Link_MinimalRebuildFromTracking)' == ''">true</Bin2Header_MinimalRebuildFromTracking>
      <Bin2HeaderYieldDuringToolExecution Condition="'$(Bin2HeaderYieldDuringToolExecution)' == ''">false</Bin2HeaderYieldDuringToolExecution>
      <Bin2HeaderToolArchitecture Condition="'$(Bin2HeaderToolArchitecture)' == ''">Native64Bit</Bin2HeaderToolArchitecture>
    </PropertyGroup>

    <MakeDir Directories="$([System.IO.Path]::GetDirectoryName('%(Bin2Header.HeaderFileName)'))" Condition="'@(Bin2Header)' != ''"/>

    <Bin2Header Condition ="'@(Bin2Header)' != ''"
        Binaries                           ="@(Bin2Header)"
        HeaderFileName                     ="%(Bin2Header.HeaderFileName)"
        AdditionalOptions                  ="%(Bin2Header.AdditionalOptions)"

        TrackerLogDirectory                ="$(TLogLocation)"
        TLogReadFiles                      ="@(Bin2HeaderTLogReadFiles)"
        TLogWriteFiles                     ="@(Bin2HeaderTLogWriteFiles)"
        ToolExe                            ="$(Bin2HeaderToolExe)"
        ToolPath                           ="$(Bin2HeaderToolPath)"
        TrackFileAccess                    ="$(TrackFileAccess)"
        MinimalRebuildFromTracking         ="$(Bin2Header_MinimalRebuildFromTracking)"
        ToolArchitecture                   ="$(Bin2HeaderToolArchitecture)"
        TrackerFrameworkPath               ="$(LibTrackerFrameworkPath)"
        TrackerSdkPath                     ="$(Bin2HeaderTrackerSdkPath)"
        TrackedInputFilesToIgnore          ="@(Bin2HeaderNoDependencies)"

        AcceptableNonZeroExitCodes         ="%(Bin2Header.AcceptableNonZeroExitCodes)"
        YieldDuringToolExecution           ="$(Bin2HeaderYieldDuringToolExecution)"
    >
    </Bin2Header>

  </Target>

  <Target Name="ComputeWavePsslLinkInputTargets">
    <ItemGroup>
      <Link Include = "%(WavePsslc.OutputFileName)" Condition = "'%(WavePsslc.Embed)' == 'true' AND '%(WavePsslc.ExcludedFromBuild)' != 'true'" />
    </ItemGroup>
  </Target>

  <Target Name="ComputeWavePsslLibInputTargets">
    <ItemGroup>
      <Lib Include = "%(WavePsslc.OutputFileName)" Condition = "'%(WavePsslc.Embed)' == 'true' AND '%(WavePsslc.ExcludedFromBuild)' != 'true'" />
    </ItemGroup>
  </Target>

  <PropertyGroup>
    <ComputeLinkInputsTargets>
      ComputeWavePsslLinkInputTargets;
      $(ComputeLinkInputsTargets)
    </ComputeLinkInputsTargets>
  </PropertyGroup>

  <PropertyGroup>
    <ComputeLibInputsTargets>
      ComputeWavePsslLibInputTargets;
      $(ComputeLibInputsTargets)
    </ComputeLibInputsTargets>
  </PropertyGroup>
</Project>
