<!--
***********************************************************************************************
Microsoft.Cpp.orbis.targets

WARNING:  DO NOT MODIFY this file unless you are knowledgeable about MSBuild and have
          created a backup copy.  Incorrect changes to this file will make it
          impossible to load or build your projects from the command-line or the IDE.
***********************************************************************************************
-->

<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <Import Project="$(VCTargetsPath)\Platforms\ORBIS\ImportBefore\*.targets" Condition="Exists('$(VCTargetsPath)\Platforms\ORBIS\ImportBefore')" />

  <PropertyGroup Condition="'$(SceLangID)' == ''">
    <SceLangID Condition="'$(LangID)' == '1041'">1041</SceLangID>
    <SceLangID Condition="'$(LangID)' != '1041'">1033</SceLangID>
  </PropertyGroup>

  <!-- Define our own $(CodeAnalysisTargets) path so our Clang SA support is used rather than the default MS one -->
  <PropertyGroup>
    <CodeAnalysisTargets>$(VCTargetsPath)\Platforms\ORBIS\SCE.ClangStaticAnalysis.orbis.targets</CodeAnalysisTargets>
  </PropertyGroup>

  <PropertyGroup>
    <UseDefaultProjectTools>false</UseDefaultProjectTools>
    <UseDefaultPropertyPageSchemas>false</UseDefaultPropertyPageSchemas>
    <UseDefaultGeneralPropertyPageSchema>false</UseDefaultGeneralPropertyPageSchema>
  </PropertyGroup>

  <PropertyGroup>
    <ToolsetTargetsFound Condition="Exists('$(VCTargetsPath)\Platforms\ORBIS\PlatformToolsets\$(PlatformToolset)\Microsoft.Cpp.orbis.$(PlatformToolset).targets')">true</ToolsetTargetsFound>
    <VCTargetsPathEffective Condition="'$(ToolsetTargetsFound)' == 'true'">$(VCTargetsPath)</VCTargetsPathEffective>
  </PropertyGroup>

  <!-- Define our own BuildSteps property to use with EnC in order to remove InitializeBuildStatus and BuildLink. Needs to be done prior to the import of Microsoft.CppCommon.targets  -->
  <PropertyGroup>
    <BuildSteps Condition="'$(DoingSceEnCBuild)'=='true' and ('$(ConfigurationType)'=='Application' or '$(ConfigurationType)'=='DynamicLibrary')">
      ResolveReferences;
      PrepareForBuild;
      BuildGenerateSources;
      BuildCompile;
    </BuildSteps>
  </PropertyGroup>

  <Import Project="$(VCTargetsPath)\Microsoft.CppCommon.targets" />
  <Import Project="$(VCTargetsPath)\Platforms\ORBIS\Microsoft.CppCommon.orbis.targets" />

  <!-- Override the BuildDependsOn property list when doing an EnC build to remove the FinalizeBuildStatus. This and removing InitializeBuildStatus prevents the $(LastBuildState) being modified, so a post Debug session build will pick up and modified object files. -->
  <PropertyGroup>
    <BuildDependsOn Condition="'$(DoingSceEnCBuild)'=='true' and ('$(ConfigurationType)'=='Application' or '$(ConfigurationType)'=='DynamicLibrary')">
      _PrepareForBuild;
      $(BuildSteps);
      AfterBuild;
    </BuildDependsOn>
  </PropertyGroup>

  <!-- Override the InitializeBuildStatus target so we can avoid changing the current build state when handling a static analysis build -->
  <Target Name="InitializeBuildStatus" DependsOnTargets="PrepareForBuild">
    <!-- Read the state of the project that was last built.  If the file doesn't exist, then perform a normal build. -->
    <ReadLinesFromFile File="$(LastBuildState)">
      <Output TaskParameter="Lines" ItemName="_ReadProjectStateLine" />
    </ReadLinesFromFile>

    <!--
    ProjectStateLine represents the important states of the project during the build.
    The ProjectStateLine is a single line, no semi-colon, string that is compared to the previous build's ProjectStateLine that is saved to a file.
    A change from the last states will trigger rebuild of the entire build.
    Rebuilds are needed for switchs that alter the tools used during the build.  Ie.  PlatformToolset.
    -->
    <PropertyGroup>
      <ProjectStateLine>#TargetFrameworkVersion=$(TargetFrameworkVersion):PlatformToolSet=$(PlatformToolSet):EnableManagedIncrementalBuild=$(EnableManagedIncrementalBuild):VCToolArchitecture=$(VCToolArchitecture):WindowsTargetPlatformVersion=$(WindowsTargetPlatformVersion)</ProjectStateLine>
      <StateBuildType Condition="'$(StateBuildType)' == '' and '@(_ReadProjectStateLine)' != '' and '%(_ReadProjectStateLine.Identity)' == '$(ProjectStateLine)'">Build</StateBuildType>
      <StateBuildType Condition="'$(StateBuildType)' == '' and '@(_ReadProjectStateLine)' != '' ">Rebuild</StateBuildType>
      <StateBuildType Condition="'$(StateBuildType)' == ''">Build</StateBuildType>
      <BuildType Condition="'$(StateBuildType)' == 'Rebuild' and '$(BuildType)' == '' ">$(StateBuildType)</BuildType>
      <_BuildActionType Condition="'$(StateBuildType)' == 'Rebuild'">Rebuild</_BuildActionType>
    </PropertyGroup>

    <WriteLinesToFile Overwrite="true" File="$(LastBuildState)" Lines="$(ProjectStateLine);$(ProjectEvaluationFingerprint)" Condition="'$(RunClangStaticAnalysis)'!='true'"/>

    <!-- Touch and create this file to indicate that the build has start.
    In case of an error, this will remain on disk as quick indication to the IDE that the project still needs building. -->
    <Touch AlwaysCreate="true" Files="$(LastBuildUnsuccessful)" Condition="'$(RunClangStaticAnalysis)'!='true'"/>
  </Target>

  <!-- Prevent a proper Rebuild from occurring when performing Static Analysis as we don't want to compile anything that's already up to date on ORBIS. -->
  <PropertyGroup>
    <RebuildDependsOn Condition="'$(RunClangStaticAnalysis)'=='true'">
      $(BuildDependsOn)
    </RebuildDependsOn>
  </PropertyGroup>

  <!-- Error out if the project references a missing platform toolset -->
  <Target Name="PlatformPrepareForBuild" DependsOnTargets="$(PlatformPrepareForBuildDependsOn)">
    <VCMessage Code="MSB8008" Type="Error" Arguments="$(OriginalPlatformToolset)" Condition="'$(OriginalPlatformToolset)' != '' and !(exists('$(VCTargetsPath)\Platforms\ORBIS\PlatformToolsets\$(OriginalPlatformToolset)\Microsoft.Cpp.ORBIS.$(OriginalPlatformToolset).targets'))"/>
  </Target>

  <Import Project="$(VCTargetsPath)\Platforms\ORBIS\PlatformToolsets\$(PlatformToolset)\Microsoft.Cpp.orbis.$(PlatformToolset).targets" />

  <Import Project="$(VCTargetsPath)\Platforms\ORBIS\OrbisWavePsslc.targets" />
  <Import Project="$(VCTargetsPath)\Platforms\ORBIS\WavePsslc.targets" />

  <PropertyGroup Condition="'$(RunCodeAnalysisOnce)'=='true'">
    <RebuildDependsOn>SkippingMSCodeAnalysisMessage</RebuildDependsOn>
  </PropertyGroup>

  <Import Project="$(VCTargetsPath)\Platforms\ORBIS\SCE.ClangSACompile.orbis.targets" Condition="'$(RunClangStaticAnalysis)' == 'true'" />
  <Import Project="$(VCTargetsPath)\Platforms\ORBIS\ImportAfter\*.targets" Condition="Exists('$(VCTargetsPath)\Platforms\ORBIS\ImportAfter')" />
</Project>
